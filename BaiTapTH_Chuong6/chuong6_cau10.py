# h√†m nh·∫≠p ma tr·∫≠n
def nhap_matrix(ten):
    hang = int(input(f"Nh·∫≠p s·ªë h√†ng c·ªßa ma tr·∫≠n {ten}: "))
    cot = int(input(f"Nh·∫≠p s·ªë c·ªôt c·ªßa ma tr·∫≠n {ten}: "))
    print(f"Nh·∫≠p c√°c ph·∫ßn t·ª≠ cho ma tr·∫≠n {ten}:")
    matrix = []
    for i in range(hang):
        row = [float(x) for x in input(f"H√†ng {i+1}: ").split()]
        while len(row) != cot:
            print("S·ªë ph·∫ßn t·ª≠ kh√¥ng kh·ªõp, nh·∫≠p l·∫°i h√†ng n√†y!")
            row = [float(x) for x in input(f"H√†ng {i+1}: ").split()]
        matrix.append(row)
    return matrix

# c·ªông
def cong_matrix(A, B):
    hang = len(A)
    cot = len(A[0])
    C = [[A[i][j] + B[i][j] for j in range(cot)] for i in range(hang)]
    return C

# ho√°n v·ªã
def hoan_vi_matrix(M):
    hang = len(M)
    cot = len(M[0])
    return [[M[j][i] for j in range(hang)] for i in range(cot)]

# Nh·∫≠p 2 ma tr·∫≠n A v√† B
A = nhap_matrix("A")
B = nhap_matrix("B")

# C·ªông 2 ma tr·∫≠n
print("\nüîπ Ma tr·∫≠n t·ªïng (A + B):")
C = cong_matrix(A, B)
for row in C:
    print(row)

# Ho√°n v·ªã A v√† B
print("\nüîπ Ma tr·∫≠n ho√°n v·ªã c·ªßa A:")
for row in hoan_vi_matrix(A):
    print(row)

print("\nüîπ Ma tr·∫≠n ho√°n v·ªã c·ªßa B:")
for row in hoan_vi_matrix(B):
    print(row)